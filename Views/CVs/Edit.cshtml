@using CVSITEHT2021.Models;
@using data.Models;
@using data.Shared;
@*@model CVSITEHT2021.Models.IndexViewModel*@
@model CVSITEHT2021.Models.CvEditViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit CV</h2>

@using (Html.BeginForm("Edit", "CVs", FormMethod.Post, new { enctype = "multipart/form-data", @class = "" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">



        @if (!string.IsNullOrEmpty(Model.ExistingImagePath))
        {
            <h3>Current profile picture:</h3>
            <img src="@(ImageService.GetImagePathRelative(Model.ExistingImagePath))" style="max-width: 200px; max-height: 200px" />
        }




        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox(nameof(CVSITEHT2021.Models.CvEditViewModel.Image), "", new { type = "file" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Education, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Education, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Education, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Workplace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Workplace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Workplace, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Competences, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Competences, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Competences, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrivateProfile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PrivateProfile)
                    @Html.ValidationMessageFor(model => model.PrivateProfile, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <dd>


        </dd>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-default" />
            </div>
        </div>


    </div>


}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
